// Generated by view binder compiler. Do not edit!
package com.example.pocketfresh.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;
import com.example.pocketfresh.R;
import com.google.android.material.tabs.TabItem;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySignUpScreenBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView account;

  @NonNull
  public final TabItem carousel1;

  @NonNull
  public final TabItem carousel2;

  @NonNull
  public final TabItem carousel3;

  @NonNull
  public final Button googleSignup;

  @NonNull
  public final TextView hiBob;

  @NonNull
  public final LinearLayout linearlayout;

  @NonNull
  public final LinearLayout linearlayout2;

  @NonNull
  public final LinearLayout loginline;

  @NonNull
  public final TabLayout tabLayout;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final ViewPager viewpager;

  private ActivitySignUpScreenBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView account, @NonNull TabItem carousel1, @NonNull TabItem carousel2,
      @NonNull TabItem carousel3, @NonNull Button googleSignup, @NonNull TextView hiBob,
      @NonNull LinearLayout linearlayout, @NonNull LinearLayout linearlayout2,
      @NonNull LinearLayout loginline, @NonNull TabLayout tabLayout, @NonNull TextView textView2,
      @NonNull TextView textView3, @NonNull TextView textView4, @NonNull ViewPager viewpager) {
    this.rootView = rootView;
    this.account = account;
    this.carousel1 = carousel1;
    this.carousel2 = carousel2;
    this.carousel3 = carousel3;
    this.googleSignup = googleSignup;
    this.hiBob = hiBob;
    this.linearlayout = linearlayout;
    this.linearlayout2 = linearlayout2;
    this.loginline = loginline;
    this.tabLayout = tabLayout;
    this.textView2 = textView2;
    this.textView3 = textView3;
    this.textView4 = textView4;
    this.viewpager = viewpager;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySignUpScreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySignUpScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_sign_up_screen, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySignUpScreenBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.account;
      ImageView account = ViewBindings.findChildViewById(rootView, id);
      if (account == null) {
        break missingId;
      }

      id = R.id.carousel1;
      TabItem carousel1 = ViewBindings.findChildViewById(rootView, id);
      if (carousel1 == null) {
        break missingId;
      }

      id = R.id.carousel2;
      TabItem carousel2 = ViewBindings.findChildViewById(rootView, id);
      if (carousel2 == null) {
        break missingId;
      }

      id = R.id.carousel3;
      TabItem carousel3 = ViewBindings.findChildViewById(rootView, id);
      if (carousel3 == null) {
        break missingId;
      }

      id = R.id.google_signup;
      Button googleSignup = ViewBindings.findChildViewById(rootView, id);
      if (googleSignup == null) {
        break missingId;
      }

      id = R.id.hi_bob;
      TextView hiBob = ViewBindings.findChildViewById(rootView, id);
      if (hiBob == null) {
        break missingId;
      }

      id = R.id.linearlayout;
      LinearLayout linearlayout = ViewBindings.findChildViewById(rootView, id);
      if (linearlayout == null) {
        break missingId;
      }

      id = R.id.linearlayout2;
      LinearLayout linearlayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearlayout2 == null) {
        break missingId;
      }

      id = R.id.loginline;
      LinearLayout loginline = ViewBindings.findChildViewById(rootView, id);
      if (loginline == null) {
        break missingId;
      }

      id = R.id.tab_layout;
      TabLayout tabLayout = ViewBindings.findChildViewById(rootView, id);
      if (tabLayout == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.viewpager;
      ViewPager viewpager = ViewBindings.findChildViewById(rootView, id);
      if (viewpager == null) {
        break missingId;
      }

      return new ActivitySignUpScreenBinding((ConstraintLayout) rootView, account, carousel1,
          carousel2, carousel3, googleSignup, hiBob, linearlayout, linearlayout2, loginline,
          tabLayout, textView2, textView3, textView4, viewpager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
